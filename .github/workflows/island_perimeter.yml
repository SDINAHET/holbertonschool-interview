name: Island Perimeter CI

on:
  push:
    paths:
      - "island_perimeter/**"
      - ".github/workflows/island_perimeter.yml"
  pull_request:
    paths:
      - "island_perimeter/**"
      - ".github/workflows/island_perimeter.yml"

jobs:
  legacy-checker:
    name: Legacy checker (Python 3.4, PEP8 1.7)
    runs-on: ubuntu-latest
    container:
      image: python:3.4

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure expected paths exist
        run: |
          test -d island_perimeter || (echo "Missing island_perimeter directory" && exit 1)
          test -f README.md || (echo "Missing README.md at repository root" && exit 1)
          test -f island_perimeter/0-island_perimeter.py || (echo "Missing island_perimeter/0-island_perimeter.py" && exit 1)
          test -f island_perimeter/0-main.py || (echo "Missing island_perimeter/0-main.py" && exit 1)

      - name: Verify first line shebang
        run: |
          head -n1 island_perimeter/0-island_perimeter.py | grep -qx '#!/usr/bin/python3' \
            || (echo "First line must be exactly '#!/usr/bin/python3'" && exit 1)
          head -n1 island_perimeter/0-main.py | grep -qx '#!/usr/bin/python3' \
            || (echo "First line of 0-main.py must be exactly '#!/usr/bin/python3'" && exit 1)

      - name: Verify executables + newline
        run: |
          test -x island_perimeter/0-island_perimeter.py || (echo "0-island_perimeter.py must be executable (chmod +x)" && exit 1)
          test -x island_perimeter/0-main.py || (echo "0-main.py must be executable (chmod +x)" && exit 1)
          tail -c1 island_perimeter/0-island_perimeter.py | od -An -t x1 | grep -q '0a' || (echo "0-island_perimeter.py must end with a newline" && exit 1)
          tail -c1 island_perimeter/0-main.py | od -An -t x1 | grep -q '0a' || (echo "0-main.py must end with a newline" && exit 1)

      - name: Enforce 'no imports' rule
        run: |
          if grep -nE '^\s*(from|import)\s+' island_perimeter/0-island_perimeter.py; then
            echo "No imports allowed in 0-island_perimeter.py"
            exit 1
          fi

      - name: Install pep8 (PEP8 1.7)
        run: |
          pip install --upgrade pip
          pip install "pep8==1.7.0"

      - name: Run PEP8 (pep8 1.7.0)
        run: |
          pep8 --show-source --show-pep8 island_perimeter/0-island_perimeter.py island_perimeter/0-main.py

      - name: Verify docstrings on module and function
        run: |
          python - << 'PY'
          import importlib.util, os
          p = os.path.abspath('island_perimeter/0-island_perimeter.py')
          spec = importlib.util.spec_from_file_location('island', p)
          mod = importlib.util.module_from_spec(spec)
          spec.loader.exec_module(mod)
          assert (mod.__doc__ or '').strip(), "Module docstring is required"
          f = getattr(mod, 'island_perimeter', None)
          assert callable(f), "Function 'island_perimeter' not found"
          assert (f.__doc__ or '').strip(), "Function 'island_perimeter' must have a docstring"
          print("Docstrings OK")
          PY

      - name: Run sample test (expected output 12)
        run: |
          out="$(python3 island_perimeter/0-main.py)"
          echo "Output: $out"
          test "$out" = "12" || (echo "Expected output '12' but got '$out'" && exit 1)

      - name: Smoke import and call + extra grids
        run: |
          python3 - << 'PY'
          import importlib.util, os
          p = os.path.abspath('island_perimeter/0-island_perimeter.py')
          spec = importlib.util.spec_from_file_location('island', p)
          mod = importlib.util.module_from_spec(spec)
          spec.loader.exec_module(mod)
          f = mod.island_perimeter
          assert f([
              [0,0,0,0,0,0],
              [0,1,0,0,0,0],
              [0,1,0,0,0,0],
              [0,1,1,1,0,0],
              [0,0,0,0,0,0]
          ]) == 12
          assert f([[0],[0],[0]]) == 0
          assert f([[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1]]) == 16
          print("Checker-like grids OK")
          PY

  tests:
    name: Tests (pytest + unittest, Python 3.10)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run unittest (discovery)
        run: |
          python -m unittest discover -s island_perimeter/tests -p "test_*unittest.py" -v

      - name: Run pytest (all tests, including checker-like)
        run: |
          pytest -v island_perimeter/tests
